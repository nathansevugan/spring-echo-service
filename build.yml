apiVersion: v1
kind: Template
metadata:
  name: springboot-echo-service
parameters:
- name: APP_NAME
  displayName: Application Name
  required: true
  value: springboot-echo-service
- name: GIT_URL
  displayName: Source URL
  required: true
  value: https://github.com/nathansevugan/springboot-echo-service.git
- name: GIT_REF
  displayName: Source Ref
  required: true
  value: master
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
    namespace: dev
  spec:
    lookupPolicy:
      local: false

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: springboot-echo-service
    name: springboot-maven3-centos
    namespace: dev
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: codecentric/springboot-maven3-centos
      from:
        kind: DockerImage
        name: codecentric/springboot-maven3-centos
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APP_NAME}-build
  spec:
    source:
      git:
        uri: https://github.com/nathansevugan/springboot-echo-service.git
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfilePath: ./.jenkins/jenkinsfile.groovy
      successfulBuildsHistoryLimit: 5
      triggers:
        type: ImageChange

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APP_NAME}-image
  spec:
    triggers: []
    failedBuildsHistoryLimit: 5
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM codecentric/springboot-maven3-centos
        COPY ./springboot-echo-service-0.0.1-SNAPSHOT.jar ./target/springboot-echo-service-0.0.1-SNAPSHOT.jar
        EXPOSE 8080
      binary:
        asFile: springboot-echo-service.jar
      type: Docker
    strategy:
      env:
        - name: APP_TARGET
          value: target
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: springboot-maven3-centos:latest
      type: Docker
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: springboot-echo-service
    name: springboot-echo-service
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: springboot-echo-service
      deploymentconfig: springboot-echo-service
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: springboot-echo-service
          deploymentconfig: springboot-echo-service
      spec:
        containers:
        - image: springboot-echo-service:latest
          imagePullPolicy: Always
          name: springboot-echo-service
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - springboot-echo-service
        from:
          kind: ImageStreamTag
          name: springboot-echo-service:latest
          namespace: dev
      type: ImageChange





#- apiVersion: v1
#  kind: DeploymentConfig
#  metadata:
#    labels:
#      app: springboot-echo-service
#    name: springboot-echo-service
#  spec:
#    replicas: 1
#    revisionHistoryLimit: 10
#    selector:
#      app: springboot-echo-service
#      deploymentconfig: springboot-echo-service
#    strategy:
#      activeDeadlineSeconds: 21600
#      resources: {}
#      rollingParams:
#        intervalSeconds: 1
#        maxSurge: 25%
#        maxUnavailable: 25%
#        timeoutSeconds: 600
#        updatePeriodSeconds: 1
#      type: Rolling
#    template:
#      metadata:
#        annotations:
#          openshift.io/generated-by: OpenShiftNewApp
#        creationTimestamp: null
#        labels:
#          app: springboot-echo-service
#          deploymentconfig: springboot-echo-service
#      spec:
#        containers:
#        - image: springboot-echo-service:latest
#          imagePullPolicy: Always
#          name: springboot-echo-service
#          ports:
#          - containerPort: 8080
#            protocol: TCP
#          resources: {}
#          terminationMessagePath: /dev/termination-log
#          terminationMessagePolicy: File
#        dnsPolicy: ClusterFirst
#        restartPolicy: Always
#        schedulerName: default-scheduler
#        securityContext: {}
#        terminationGracePeriodSeconds: 30
#    test: false
#    triggers:
#    - type: ConfigChange
#    - imageChangeParams:
#        automatic: true
#        containerNames:
#        - springboot-echo-service
#        from:
#          kind: ImageStreamTag
#          name: springboot-echo-service:latest
#          namespace: dev
#      type: ImageChange
